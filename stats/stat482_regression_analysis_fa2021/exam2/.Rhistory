data = read.csv('exam2-1.csv')
data
head(data)
cor(data$cases,data$distance)
cor(data$cases,data$time)
cor(data$distance,data$time)
head(data)
data1.mod = lm(time ~ cases + distance, data=data1)
data1 = read.csv('exam2-1.csv')
head(data1)
data1.mod = lm(time ~ cases + distance, data=data1)
data1.mod
summary(data1.mod)
coeff(summary(data1.mod))
coef(summary(data1.mod))
anova(data1.m12)
data1 = read.csv('exam2-1.csv')
data1.m12 = lm(time ~ cases + distance, data=data1)
data1.m12
coef(summary(data1.m12))
anova(data1.m12)
data1.m0 = lm(time ~ 1, data=data1)
data1.m0
data1.,0
data1.m0
anova(data1.m0)
data1.m2 = lm(time ~ x2, data=data1)
data1.m2 = lm(time ~ distance, data=data1)
anova(data1.m0)
anova(data1.m2)
anova(data1.m2)
anova(data1.m0,data1.m2)
anova(data1.m0,data1.m2)  # equivalent to anova(data1.m2)
data1.m1 = lm(time ~ cases, data=data1)
data1.m1
anova(m1,m12)
anova(data1.m1,data2.m12)
anova(data1.m1,data1.m12)
?cor
cor(data1$cases,data1$distance)
data2 = read.csv('exam2-2.csv')
head(data2)
data2
data2.xmod = lm(satsifcation ~ x1*x2)
data2.xmod = lm(satsifcation ~ x1*x2, data=data2)
data2.xmod = lm(satsifcation ~ x1*x2, data=data2)
data2.xmod = lm(satisfaction ~ x1*x2, data=data2)
data2.xmod
lm(satisfaction ~ x1+x2+I(x1*x2), data=data2)
lm(satisfaction ~ x1+x2+x1:x2, data=data2)
summary(data2.xmod)
data2.xmod = lm(satisfaction ~ x1+x2+I(x1*x2), data=data2)
summary(data2.xmod)
b0 = coef(data2.xmod)[1]
b1 = coef(data2.xmod)[2]
b2 = coef(data2.xmod)[3]
b12 = coef(data2.xmod)[4]
reg.est.x1 = matrix(c(b0+b2,b0,b0-b2,b1+b12,b1,b1-b12),nrow=3)
reg.est.x1
dimnames(reg.est.x1) = list(c("x2=+1","x2=0","x2=-1"),c("intercept","slope"))
reg.est.x1
head(data2)
data2
summary(data2.xmod)
reg.est.x1 = matrix(c(b0+b2,b0,
b0-b2,b1+b12,
b1,b1-b12),nrow=3,byrow=F)
dimnames(reg.est.x1) = list(c("x2=+1","x2=0","x2=-1"),c("intercept","slope"))
reg.est.x1
reg.est.x1 = matrix(c(b0+b2,b0,
b0-b2,b1+b12,
b1,b1-b12),nrow=3)
t.reg.est.x1 = matrix(c(b0+b2, b1+b12,
b0,b1,
b0-b2,b1-b12),nrow=3,byrow=T)
t.reg.est.x1
reg.est.x1
t.reg.est.x1
summary(data2.xmod)
x.pred = predict(data2.xmod)
data2.amod = lm(y ~ x1+x2,data=data2)
data2.amod = lm(satisfaction ~ x1+x2,data=data2)
add.pred = predict(data2.xmod)
interaction(data2$x1,data2$x2,x.pred,
col=c("red","blue"),
trace.label="x2",
xlab="x1",
ylab="y")
# interaction model:
x.pred = predict(data2.xmod)
interaction.plol(data2$x1,data2$x2,x.pred,
col=c("red","blue"),
trace.label="x2",
xlab="x1",
ylab="y")
interaction.plot(data2$x1,data2$x2,x.pred,
col=c("red","blue"),
trace.label="x2",
xlab="x1",
ylab="y")
data2.amod = lm(satisfaction ~ x1+x2,data=data2)
add.pred = predict(data2.amod)
interaction.plot(data2$x1,data2$x2,add.pred,
col=c("red","blue"),
trace.label="x2",
xlab="x1",
ylab="y")
anova(data2.amod, data2.xmod)
library(matlib)
data3 = read.csv('exam2-3.csv')
head(data3)
library(matlib)
data3 = read.csv('exam2-3.csv')
head(data3)
contrasts(data3$process) = contr.treatment(3,base=3)
str(data3)
library(matlib)
data3 = read.csv('exam2-3.csv')
data3$process = as.factor(data3$process)
contrasts(data3$process) = contr.treatment(3,base=3)
contrasts(data3$process)
data3.amod = lm(yield ~ impurity+process,data=data3)
b.hat = coef(data3.amod)
dfe = nrow(model.matrix(data3.amod)) - ncol(model.matrix(data3.amod))
V = vcov(data3.amod)
a = c(0,0,1,-1)
b.hat.12 = a %*% b.hat
se.12 = sqrt(a %*% V %*% a)
#t.stat.12 = b.hat.12 / se.12
#p.value.12 = 2*(1-pt(abs(t.stat.12),dfe))
#print(c(t.stat.12,p.value.12))
b.hat.12.lower = b.hat.12 - qt(.975,dfe) * se.12
b.hat.12.upper = b.hat.12 + qt(.975,dfe) * se.12
print(c(b.hat.12.lower,b.hat.12.upper))
confint(data3.amod)
library(matlib)
data3 = read.csv('exam2-3.csv')
data3$process = as.factor(data3$process)
contrasts(data3$process) = contr.treatment(3,base=3)
data3.amod = lm(yield ~ impurity+process,data=data3)
b.hat = coef(data3.amod)
dfe = nrow(model.matrix(data3.amod)) - ncol(model.matrix(data3.amod))
V = vcov(data3.amod)
a = c(0,0,1,-1)
b.hat.12 = a %*% b.hat
se.12 = sqrt(a %*% V %*% a)
b.hat.12.lower = b.hat.12 - qt(.975,dfe) * se.12
b.hat.12.upper = b.hat.12 + qt(.975,dfe) * se.12
cat("beta2-beta1",c(b.hat.12.lower,b.hat.12.upper))
confint(data3.amod)
newdat = data.frame(x=seq(min(data3$x),max(data3$x)+10,length.out=100))
data3$x
newdat = data.frame(x=seq(min(data3$impurity),max(data3$$impurity)+10,length.out=100))
newdat = data.frame(x=seq(min(data3$impurity),max(data3$impurity)+10,length.out=100))
newdat
newdat$pred = predict(data3.amod, newdata=newdat)
newdat = data.frame(impurity=seq(min(data3$impurity),max(data3$impurity)+10,length.out=100))
newdat$pred = predict(data3.amod, newdata=newdat)
intercept.3 = b.hat[1]
intercept.1 = b.hat[1]+b.hat[3]
intercept.2 = b.hat[1]+b.hat[4]
slope = b.hat[2]
cat(slope, intercept.1, intercept.2, intercept.3)
attach(data3)
plot(impurity[process == A],
yield[type == 1],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
plot(impurity[process == A],
yield[type == 1],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
plot(impurity[process == "A"],
yield[type == 1],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
impurity[process == "A"]
data3
impurity[process == "A"]
yield[process == "A"]
data3
data3
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
max(impurity)
min(impurity)
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
max(impurity)
min(impurity)
max(impurity)
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity),max(impurity)),
ylim=c(min(yield),max(yield)))
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity)-1,max(impurity)+1),
ylim=c(min(yield),max(yield)))
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity)-1,max(impurity)+1),
ylim=c(min(yield)-1,max(yield)+1))
data3
max(impurity[process=="A"])
min(impurity[process=="A'])
min(impurity[process=="A'])
min(impurity[process=="A"])
max(impurity[process=="A"])
intercept.3 = b.hat[1]
intercept.1 = b.hat[1]+b.hat[3]
intercept.2 = b.hat[1]+b.hat[4]
slope = b.hat[2]
cat(slope, intercept.1, intercept.2, intercept.3)
attach(data3)
plot(impurity[process == "A"],
yield[process == "A"],
xlab='impurity',
ylab='yield',
pch=1,
col='blue',
xlim=c(min(impurity)-1,max(impurity)+1),
ylim=c(min(yield)-1,max(yield)+1))
points(impurity[process=="B"], sales[process=="B"], pch=2, col='red')
