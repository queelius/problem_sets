?t.test
library("readxl")
data = read_excel("./handout1data.xlsx")
data$method = as.factor(data$method)
dry = na.omit(data$time[data$method=='d'])
wet = na.omit(data$time[data$method!='d'])
alpha = .05
t.test(x=dry,
y=wet,
alternative=c("two.sided"),
conf.level=1-alpha,
var.equal=T)
res = t.test(x=dry,
y=wet,
alternative=c("two.sided"),
conf.level=1-alpha,
var.equal=T)
res
res$statistic
res$parameter
res$conf.int
res$conf.int[1]
res$conf.int[2]
res$conf.int[1:2]
library("multcomp")
library("multcomp")
method = as.factor(data$method)
time = data$time
aov.model = aov(time~method)
comps = glht(aov.model,linfct=mcp(method="Tukey"))
ci.lsd = confint(comps,calpha=univariate_calpha())
ci.lsd$confint
ci.lsd$confint[1]
ci.lsd$confint[2:3]
means = by(strength,percent,mean)
data.2 = read_excel("./handout2data.xlsx")
strength = na.omit(data.2$strength)
percent = na.omit(as.factor(data.2$percent))
means = by(strength,percent,mean)
means
max.D = max(means) - min(means)
max.D
var(18.65,17.95,20.95,18.82)
var(c(18.65,17.95,20.95,18.82))
max(c(18.65,17.95,20.95,18.82))-min(c(18.65,17.95,20.95,18.82))
sd(c(18.65,17.95,20.95,18.82))
var(c(18.65,17.95,20.95,18.82))
var(data.2$life)
data.2$life
is.na(data.2$life)
data.2[is.na(data.2$life)]
data.2$life[is.na(data.2$life)]
data.2$life[!is.na(data.2$life)]
var(data.2$life[!is.na(data.2$life)])
var(data.2$fluid[!is.na(data.2$fluid)])
var(data.2$fluid[!is.na(data.2$life)])-var(data.2$fluid[!is.na(data.2$fluid)])
var(data.2$life[!is.na(data.2$life)])-var(data.2$fluid[!is.na(data.2$fluid)])
mus = by(data.2$life,data.2$fluid,mean)
mus = by(data.2$life,data.2$fluid,mean)
mus
var(mus)
sd(mus)
2*var(mus)
var(mus)
mus
mus
fluid = as.factor(na.omit(data.2$fluid))
life = na.omit(data.2$life)
mus = by(life,fluid)
mus = by(life,fluid,means)
mus = by(life,fluid,mean)
mus
summary(aov(life~fluid))
summary(aov(life~fluid))
summary(aov(life~fluid))$Residuals
str(summary(aov(life~fluid)))
xx = aov(life~fluid)
xx$residuals
xx$residuals
mean(xx$residuals)
mean(xx$residuals^2)
summary(xx)
xx=summary(xx)
xx
xx$mse
xx$sigma
xx$sigma2
aov(life~fluid)$sigma
aov(life~fluid)$sigma2
aov(life~fluid)$var
aov(life~fluid)
means = by(strength,percent,mean)
aov(strength~percent)
summary(aov(strength~percent))
means
power.t.test(n=NULL,delta=0.025,sd=0.028,sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=0.025,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=3,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=4,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=2,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=3.3,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.t.test(n=NULL,delta=3.3,sd=sqrt(3.3),sig.level = .05,power = .90,type = "two.sample")
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
a=4
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
s2=3.3
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
max.D = 3
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
a = 5
a = 5
sim.size = 10000
decide.Ha = rep(NA,sim.size)
means = by(strength,percent,mean)
#means
max.D = max(means) - min(means)
#summary(aov(strength~percent))
s2 = 8.06
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
ys = data.frame(
rnorm(n,means[1],sqrt(s2)),
rnorm(n,means[2],sqrt(s2)),
rnorm(n,means[3],sqrt(s2)),
rnorm(n,means[4],sqrt(s2)),
rnorm(n,means[5],sqrt(s2)))
#power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
n = 3
ys = data.frame(
rnorm(n,means[1],sqrt(s2)),
rnorm(n,means[2],sqrt(s2)),
rnorm(n,means[3],sqrt(s2)),
rnorm(n,means[4],sqrt(s2)),
rnorm(n,means[5],sqrt(s2)))
power.anova.test(groups=a,between.var = max.D^2/2/(a-1),within.var = s2,power = .9,sig.level = .05,n=NULL)
ys
print(ys)
str(ys)
means[1]
means[2]
n
means(ys)
ys
mean(ys)
ys = data.frame(
"1"=rnorm(n,means[1],sqrt(s2)),
"2"=rnorm(n,means[2],sqrt(s2)),
"3"=rnorm(n,means[3],sqrt(s2)),
"4"=rnorm(n,means[4],sqrt(s2)),
"5"=rnorm(n,means[5],sqrt(s2)))
ys
ys(means)
library(dplyr)
ys %>% summarise(mean)
means[1]
means[1]*2
ys %>% summarise(mean)
ys %>% summarise_if(is.numeric,mean)
warnings()
sd = .7
alpha = .05
h = .8
v = .25
power.t.test(n=NULL,delta=v,sd=sd,sig.level=alpha,power=h,type="two.sample")
# let's verify the power calculation, using the noncentral t distribution function
# qt computes quantiles, pt computes cumulative probabilities
n = 124
df = 2*(n-1)
ncp = sqrt(n/2)*(h/sd)
1 - pt(qt(1-alpha/2,df),df,ncp)
power.t.test(n=NULL,delta=v,sd=sd,sig.level=alpha,power=h,type="two.sample")
?power.t.test
?pt
pt(q=0,df=1)
pt(q=0,df=10)
pt(q=1,df=10)
pt(q=1,df=100)
pt(q=0,df=100)
pt(q=0,df=10)
pt(q=0,df=1)
pt(q=0,df=2)
pt(q=2,df=2)
pt(q=2,df=1)
pt(q=2,df=100)
pt(q=-2,df=100)
pt(q=-2,df=10000)
pt(q=-2,df=1000000)
pt(q=2,df=1000000)
pt(q=2,df=10000)
pt(q=2,df=100)
qt(.05)
qt(.05,30)
qt(.025,30)
qt(.8,30)
qt(.2,30)
qt(.9,30)
qnorm(.01)
qnorm(.05)
qnorm(.1)
qnorm(.025)
library("readxl")
library("multcomp")
library("multcomp")
data = read_excel("./handout2data.xlsx")
strength = na.omit(data$strength)
strength = na.omit(data$strength)
percent = na.omit(as.factor(data$percent))
pwr = .8
alpha = .05
a = 5
means = by(strength,percent,mean)
max.D = max(means) - min(means)
#summary(aov(strength~percent))
s2 = 8.06
#
# arguments:
#   n: sample size,
#   sd: standard deviation
#   alpha: significance level
#   h: power (shows as a horizontal line)
#   v: specific alternative (shows as a vertical line)
#
# output:
#   graph of power curve
power.curve = function(n, sd, alpha, h, v)
{
df = 2*(n-1)
delta = seq(from=0,to=5*sd/sqrt(n/2),length.out = 1000)
power = 1 - pt(qt(1-alpha/2,df),df,ncp = sqrt(n/2)*(delta/sd))
plot(delta,power,type = "l",lwd=2,col="blue")
abline(h=h,col="red",lwd=2)
abline(v=v,col="green",lwd=2)
}
sd = .7
alpha = .05
h = .8  # power
v = .25 # alternative
power.t.test(n=NULL,delta=v,sd=sd,sig.level=alpha,power=h,type="two.sample")
sd
n
qt(.025,n-2,lower.tail=T)
qt(1-.025,n-2,lower.tail=T)
qt(.025,n-2,lower.tail=F)
qt(.025,n-2,lower.tail=F)
qnorm(.025)
qt(.025,n,lower.tail=F)
qt(.025,n-2,lower.tail=F)
sd*qt(.025,n-2,lower.tail=F)
qt(.025,n-2,lower.tail=F)*sd/sqrt(n)
v
v-qt(.025,n-2,lower.tail=F)*sd/sqrt(n)
qt(.025,n-2,lower.tail=F)*sd/sqrt(n)
?power.t.test
power.t.test(n=NULL,delta=.025,sd=.028,sig.level=.05,power=.9,type="two.sample")
qnorm(.05)
qnorm(.025)
qnorm(1-.025)
(2*qnorm(1-.025))^2*.7^2/.25^2
(2*qt(1-.025))^2*.7^2/.25^2
(2*qt(1-.025,df=120))^2*.7^2/.25^2
(2*qt(1-.025,df=10))^2*.7^2/.25^2
(2*qt(1-.025,df=50))^2*.7^2/.25^2
2*(qnorm(1-.025) + qnorm(.8))*.7^2/.25^2
2*(qnorm(1-.025) + qnorm(.8))^2*.7^2/.25^2
2*(qnorm(1-.025) + qnorm(.2))^2*.7^2/.25^2
2*(qnorm(1-.025) + qnorm(.8))^2*.7^2/.25^2
qt(1-.025,df=120)
qt(1-.025,df=124)
qt(1-.025,df=124) - qnorm(1-.025)
h4.data = read_excel("handout2data.xlsx")
setwd("~/filetopia/gdrive/alex/college/grad_math_classes/stat589_fa2021/hw/hw4")
setwd("~/filetopia/gdrive/alex/college/grad_math_classes/stat589_fa2021/hw/hw4")
h4.data = read_excel("handout2data.xlsx")
#We will use the same data as for handout 2 when illustrating contrasts and multiple comparisons
library("readxl")
setwd("~/filetopia/gdrive/alex/college/grad_math_classes/stat589_fa2021/hw/hw4")
h4.data = read_excel("handout2data.xlsx")
str(h4.data)
#Example 4.1 (refer back to Example 2.2 on comparing veneer brands)
brand = as.factor(na.omit(h4.data$brand))
wear = na.omit(h4.data$wear)
#Recall the ANOVA test for equal means. We want to investigate the relationship further.
aov.mod = aov(wear~brand)
summary(aov.mod)
#Here we are using glht to estimate a constrast defined as a comparison between the first 3 groups and the last 2 groups
con.test = glht(aov.mod, linfct = mcp( brand = c(2,2,2,-3,-3) ))
#We will also need the R package for performing multiple comparisons
library("multcomp")
#Here we are using glht to estimate a constrast defined as a comparison between the first 3 groups and the last 2 groups
con.test = glht(aov.mod, linfct = mcp( brand = c(2,2,2,-3,-3) ))
#summary is used to display the test results, confint is used to display the interval estimate
summary(con.test)
percent = as.factor(na.omit(h4.data$percent))
strength = na.omit(h4.data$strength)
aov.mod = aov(strength ~ percent)
summary(aov.mod)
summary(aov.mod$residuals)
aov.mod$df.residual
aov.mod$model
aov.mod$fitted.values
aov.mod$df.residual
aov.mod$effects
aov.mod$qr
aov.mod$contrasts
aov.mod$xlevels
aov.mod$coefficients
aov.mod$residuals
mean(aov.mod$residuals)
mean(aov.mod$residuals^2)
sum(aov.mod$residuals^2)/(20)
xx=summary(aov.mod)
xx
xx$mse
View(xx)
xx$`Mean Sq`
xx$'Mean Sq'
xx[[1]]
xx[[1]]$`Mean Sq`
xx[[1]]$`Mean Sq`[1]
xx[[1]]$`Mean Sq`[2]
aov.model
mse(aov.mod)
mean.square(aov.mod)
aov.mod
summary(aov.mod)
2.84^2
aov.mod$xlevels
data.frame(percent,strength)
#We will use the same data as for handout 2 when illustrating contrasts and multiple comparisons
library("readxl")
#We will also need the R package for performing multiple comparisons
library("multcomp")
h4.data = read_excel("handout2data.xlsx")
#Example 4.1 (refer back to Example 2.2 on comparing veneer brands)
brand = as.factor(na.omit(h4.data$brand))
wear = na.omit(h4.data$wear)
#Recall the ANOVA test for equal means. We want to investigate the relationship further.
aov.mod = aov(wear~brand)
summary(aov.mod)
#Here we are using glht to estimate a constrast defined as a comparison between the first 3 groups and the last 2 groups
con.test = glht(aov.mod, linfct = mcp( brand = c(2,2,2,-3,-3) ))
#summary is used to display the test results, confint is used to display the interval estimate
summary(con.test)
confint(con.test)
#The code below is used to define a set of orthogonal contrasts
contrasts(brand) = cbind( c(2,2,2,-3,-3),
c(1,1,-2,0,0),
c(1,-1,0,0,0),
c(0,0,0,1,-1))
#We will re-fit the ANOVA model, now with our own contrasts defined as above
contr.mod = aov(wear~brand)
#We can get a decomposition of sum squares into specific effects
#The command split is used to specify the decompositon.
summary(contr.mod,split = list(brand=list("us-f"=1,"a-c"=2,"ac-aj"=3,"t-x"=4)))
# the code below is used to define a set of orthogonal contrasts
contrasts(fluid) = cbind(c(1,-1, 0, 0),
c(0, 0, 1,-1),
c(1, 1,-1,-1))
summary(contrasts)
summary(fluid)
fluid
contr.mod = aov(life~fluid)
contr.mod
summary(contr.mod)
summary(contr.mod,split = list(brand=list("gamma.1"=1,"gamma.2"=2,"gamma.3"=3)))
summary(contr.mod,split = list(fluid=list("gamma.1"=1,"gamma.2"=2,"gamma.3"=3)))
