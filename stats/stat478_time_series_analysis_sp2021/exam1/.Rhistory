#The following dataset is used to predict students' grade-point averages at the end of their freshman year by entrance test scores and high school class rank.
hpdata=read.table(file="./hp_data.txt")
#The following dataset is used to predict students' grade-point averages at the end of their freshman year by entrance test scores and high school class rank.
hpdata=read.table(file="./hp_data.txt")
colnames(hpdata)=c("ID","HP","HOME","LOT")
ls
#The following dataset is used to predict students' grade-point averages at the end of their freshman year by entrance test scores and high school class rank.
hpdata=read.table(file="hp_data.txt")
getwd()
chwd("~/classes/")
setwd("~/classes")
setwd("stat478_time_series_analysis/hw/exam1")
getwd
getwd()
#The following dataset is used to predict students' grade-point averages at the end of their freshman year by entrance test scores and high school class rank.
hpdata=read.table(file="hp_data.txt")
View(hpdata)
colnames(hpdata)=c("ID","HP","HOME","LOT")
pairs(HP~Home+Lot,hpdata, main="Scatterplot Matrix")		#construct scatterplots
pairs(HP~HOME+LOT,hpdata, main="Scatterplot Matrix")		#construct scatterplots
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
summary(result)	#get details from the regression output
anova(result)		#get the anova table
####Residual Analysis
qqnorm(result$residual)		#construct qq plot and histgram for the residuals
r = rstudent(result)	#Get the studentized residual
plot(r,hpata$HOME)
plot(r,hpdata$HOME)
plot(r,hpdata$LOT)
####Weighted Least Squares
wts=1/fitted(lm((residuals(result))^2~result$fitted))
View(result)
print(wts)
result$fitted
result$fitted.values
result$fitted
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
#### weighted least squares
residual_fit=lm((residuals(result))^2~result$fitted)
summary(residual_fit)
plot(residual_fit)
wts=1/fitted(residual_fit)
print(wts)
wts=abs(1/fitted(residual_fit))
print(wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
plot(r,result.weighted$fitted)
r = rstudent(result.weighted)	#Get the studentized residual
plot(r,result.weighted$fitted)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
r = rstudent(result.weighted)	#Get the studentized residual
plot(r,result.weighted$fitted)
#### weighted least squares
residual_fit=lm((residuals(result))^2~result$fitted)
residual_fit
#### weighted least squares
resids=(residuals(result))^2~result$fitted
print(resides)
print(resids)
#### weighted least squares
resids=(residuals(result))^2~result$fitted
residual_fit=lm(resids)
?residuals
#### weighted least squares
residual_fit=lm(abs((residuals(result))^2~result$fitted))
#### weighted least squares
residual_fit=lm((residuals(result))^2~result$fitted)
wts=1/fitted(residual_fit)
print(wts)
wts=1/fitted(abs(residual_fit))
wts=1/abs(fitted(residual_fit))
print(wts)
?lm
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
hist(result$residual)
r = rstudent(result)	#Get the studentized residual
plot(r,result$fitted)	#Plot studentized residual vs fitted values
plot(r,hpdata$HOME)
plot(r,hpdata$LOT)
hist(result$residual)
####Residual Analysis
qqnorm(result$residual)		#construct qq plot and histgram for the residuals
hist(result$residual)
acf(result)
acf(reseult$residual)
acf(result$residual)
plot(r,result$fitted)	#Plot studentized residual vs fitted values
plot(r,hpdata$HOME)
####Residual Analysis
plot(result$residual)
qqnorm(result$residual^2)		#construct qq plot and histgram for the residuals
qqnorm(result$residual)		#construct qq plot and histgram for the residuals
####Residual Analysis
plot(result$residual)
plot(result,result$residual)
plot(result$fit,result$residual)
plot(result$fitted,result$residual)
print(result$fitted.values)
?fitted.values
####Residual Analysis
plot(result$fitted,result$residual)
####Residual Analysis
plot(result$fitted,result$residual)
plot(result$residual,result$fitted)
r = rstudent(result)	#Get the studentized residual
plot(r,result$fitted)	#Plot studentized residual vs fitted values
plot(result$residual,result$fitted)
####Residual Analysis
plot(result$fitted,result$residual)
plot(result$residual,result$fitted)
####Residual Analysis
plot(result$fitted,result$residual)
plot(hpdata$HOME,result$residual)
# variance is also increas with respect to lot price
plot(hpdata$LOT,result$residual)
# variance is also increas with respect to home price
plot(hpdata$HOME,result$residual)
# the following plot of the fitted values vs the residuals suggests
# non-constant variance. the variance seems to be increasing with respect
# to y.
plot(result$fitted,result$residual)
acf(result$residual)
pairs(HP~HOME+LOT,hpdata, main="Scatterplot Matrix")		#construct scatterplots
qqnorm(result$residual)		#construct qq plot and histgram for the residuals
plot(r,hpdata$HOME)
plot(r,hpdata$LOT)
plot(r,result$fitted)	#Plot studentized residual vs fitted values
hist(result$residual)
qqnorm(result$residual) #construct qq plot and histgram for the residuals
plot(abs(result$residuals))
plot(result$residuals)
print(residuals(result)-result$residuals)
print(result$fitted)
myresiduals=lm((residuals(result))^2~result$fitted)
print(myresiduals)
myresiduals2=lm((abs_residuals)^2~result$fitted)
abs_residuals = abs(result$residuals)
myresiduals2=lm((abs_residuals)^2~result$fitted)
print(myresiduals)
print(myresiduals2)
plot(result$residuals)
plot(result$residuals)
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
# the histogram of the residuals at least suggests zero mean, as it is
# symmetric around 0.
hist(result$residual)
# the following plot of the fitted values vs the residuals suggests
# non-constant variance. the variance seems to be increasing with respect
# to y. the residuals do seem to have a zero mean though.
plot(result$fitted,result$residual)
# the acf of the residuals shows a high degree of autocorrelation. every lag
# is outside of the boundary.
acf(result$residual)
result.residuals_fit=lm((residuals(result))^2~result$fitted)
result.residuals_fit
acf(result.residuals_fit)
acf(result.residuals_fit$residuals)
plot(result.residuals_fit)
plot(result$fitted,result.residuals)
plot(result$fitted,result.residuals$residuals)
plot(result$fitted,result.residuals_fit$residuals)
print(result.residuals_fit)
print(result)
print(result.residuals_fit$fitted.values)
print(abs(result.residuals_fit$fitted.values))
print(result.residuals_fit$fitted.values)
print(abs(result.residuals_fit$fitted.values))
(residuals(result))^2
# the following plot of the fitted values vs the residuals suggests
# non-constant variance. the variance seems to be increasing with respect
# to y. the residuals do seem to have a zero mean though.
plot(result$residual,result$fitted)
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
plot(result)
plot(HP,result$residuals)
plot(result$HP,result$residuals)
plot(result$fitted,result$residuals)
result$fitted
View(hpdata)
result.residuals_fit=lm((abs(residuals(result))^2~result$fitted)
result.residuals_fit=lm((abs(residuals(result))^2~result$fitted)
#result.residuals_fit=lm((residuals(result))^2~result$fitted)
print(result.residuals_fit$fitted.values)
result.residuals_fit=lm((abs(residuals(result))^2~result$fitted)
print(result.residuals_fit)
print(result.residuals_fit$fitted.values)
residuals_fit=lm((abs(residuals(result))^2~result$fitted)
residuals_fit=lm((abs(residuals(result))^2~result$fitted))
print(residuals_fit)
residuals_fit=lm((abs(residuals(result))^2~result$fitted))
print(residuals_fit)
plot(residuals_fit$fitted.values)
print(residuals_fit$fitted.values)
residuals_fit2=lm((residuals(result)^2~result$fitted))
print(residuals_fit2$fitted.values)
residuals_fit=lm((abs(residuals(result))~result$fitted))
print(residuals_fit$fitted.values)
plot(residuals_fit)
plot(residuals_fit$fitted_values,result$fitted)
plot(residuals_fit$fitted,result$fitted)
residuals_fit=lm((abs(residuals(result))~result$fitted))
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
summary(result)	#get details from the regression output
# the histogram of the residuals at least suggests zero mean, as it is
# symmetric around 0.
hist(result$residual)
# the following plot of the fitted values vs the residuals suggests
# non-constant variance. the variance seems to be increasing with respect
# to y. the residuals do seem to have a zero mean though.
plot(result$residual,result$fitted)
# i can't really make anything out for the lot.
plot(hpdata$LOT,result$residual)
# the following plot of the fitted values vs the residuals suggests
# non-constant variance. the variance seems to be increasing with respect
# to y. the residuals do seem to have a zero mean though.
plot(result$residual,result$fitted)
# i can't really make anything out for the lot.
plot(result$residual,hpdata$LOT)
# the acf of the residuals shows a high degree of autocorrelation. every lag
# is outside of the boundary.
acf(result$residual)
residuals_fit
summary(residuals_fit)
plot(residuals_fit$residual,result$fitted)
print(residuals_fit$fitted.values)
residuals_fit=lm((residuals(result)^2~result$fitted))
print(residuals_fit$fitted.values)
print(abs(residuals_fit$fitted.values))
abs_fits = abs(residuals_fit$fitted.values)
print(wts)
print(abs_fits)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
acf(result$residual)
plot(result$residual,result.weighted$fitted)
plot(result.weighted$fitted,result$fitted)
r = rstudent(result.weighted)	#Get the studentized residual
plot(r,result.weighted$fitted)
plot(residuals_fit)
print(residuals_fit)
print(residuals_fit$residuals)
print(residuals_fit$fitted.values)
print(result$residuals)
print(residuals_fit$fitted.values)
print(residuals_fit$fitted.values[-1])
print(residuals_fit$fitted.values[-1])
print(residuals_fit$fitted.values[1])
print(residuals_fit$fitted.values[:-1])
print(residuals_fit$fitted.values[0:-1])
print(residuals_fit$fitted.values[-1:])
print(residuals_fit$fitted.values[2])
print(result$residuals[2])
print(sqrt(residuals_fit$fitted.values[2]))
print(result$residuals[3])
print(sqrt(residuals_fit$fitted.values[3]))
print(result$residuals[20])
print(sqrt(residuals_fit$fitted.values[20]))
print(result$residuals,sqrt(residuals_fit$fitted.values))
print(result$residuals,sqrt(abs(residuals_fit$fitted.values)))
print(result$residuals)
print(result$residuals^2)
residuals_fit=lm((residuals(result)^2~result$fitted))
print(residuals_fit$fitted.values)
print(result$residuals^2)
print(result$residuals)
print(residuals_fit$fitted.values)
print(result$residuals)
print(result$residuals)
print(result$residuals)
print(residuals_fit$fitted.values)
print(abs(residuals_fit$fitted.values))
print(abs(residuals_fit$fitted.values)-abs(result$residuals))
print(abs(residuals_fit$fitted.values)-abs(result$residuals))
print(sqrt(abs(residuals_fit$fitted.values))-abs(result$residuals))
View(residual_fit)
residual_fit[["coefficients"]][["result$fitted"]]
print(result$residuals)
print(result$residuals^2)
print(result$residuals)
print(result$residuals)
print(result$residuals^2)
print(residuals_fit$residuals)
print(result$residuals)
print(residuals_fit$residuals)
print(result$residuals^2)
print(residuals_fit$residuals)
print(result$residuals)
print(residuals_fit$residuals)
print(sqrt(residuals_fit$residuals))
print(sqrt(abs(residuals_fit$residuals)))
print(result$residuals)
print(sqrt(abs(residuals_fit$residuals)))
print(residuals(result)^2)
print(result$fitted)
summary(result)	#get details from the regression output
print(result$fitted)
plot(result$HOME,result$fitted)
plot(result$HOME,result$HP)
print(result$HOME)
print(result$coefficients)
print(result$HOME)
print(result$model
print(result$model)
summary(result$model)
summary(result)
print(result$fitted)
#### Regression Analysis Using lm() ####
result=lm(HP~HOME+LOT, data=hpdata)		 # fit a multiple regression model
residuals_fit=lm((residuals(result))^2~result$fitted)
print(residuals_fit)
fitted(residuals_fit)
abs_residuals = abs(residuals(result))
print(abs_residuals)
residuals_fit=lm(abs_residuals^2~result$fitted)
print(residuals_fit)
print(residuals_fit$fitted.values)
residuals_fit=lm(abs_residuals~result$fitted)
print(residuals_fit$fitted.values)
fitted(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/(residuals_fit$fitted.values)
print(wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
print(wts)
residuals_fit=lm(abs_residuals~result$fitted)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/(residuals_fit$fitted.values^2)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
plot(result.weighted$fitted,result$fitted)
plot(r,result.weighted$fitted)
acf(result.weighted$residual)
acf(result$residual)
acf(result.weighted$residual)
acf(result$residual)
print(result$fitted)
abs_residuals = abs(residuals(result))
print(abs_residuals)
residuals_fit=lm(abs_residuals~result$fitted)
print(residuals_fit$fitted.values)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/(residuals_fit$fitted.values)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/(residuals_fit$fitted.values)
print(wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
print(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/fitted(residuals_fit)
print(wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
is.na(wts)
is.negative(wts)
?is.negative
is.negative(3)
is.negative(3)
negative(3)
negative?(3)
negative? 3
library(schoolmath)
install.packages("schoolmath")
is.negative(3)
library("schoolmath")
is.negative(3)
is.negative(wts)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
is.negative(3)
1
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
print(wts)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted)
acf(result.weighted$fitted.values)
residuals_fit=lm(abs_residuals^2~result$fitted)
print(residuals_fit)
print(residuals_fit$fitted.values)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted)
acf(result.weighted$residual)
acf(result$residual)
summary(residuals_fit)
residuals_fit=lm(abs_residuals~result$fitted)
abs_residuals = abs(residuals(result))
residuals_fit=lm(abs_residuals~result$fitted)
print(residuals_fit)
summary(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
acf(result$residual)
residuals_fit=lm(abs_residuals^2~result$fitted)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/fitted(residuals_fit)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
print(wts)
#abs_residuals = abs(residuals(result))
abs_residuals = residuals(result)
residuals_fit=lm(abs_residuals^2~result$fitted)
summary(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/fitted(residuals_fit)
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
acf(result$residual)
acf(result.weighted$residual)
abs_residuals = abs(residuals(result))
residuals_fit=lm(abs_residuals^2~result$fitted)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
acf(result.weighted$residual)
acf(result$residual)
residuals_fit=lm(abs_residuals~result$fitted)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
abs_residuals = abs(residuals(result))
residuals_fit=lm(abs_residuals~result$fitted)
summary(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
acf(result$residual)
residuals_fit=lm(abs_residuals^2~result$fitted)
summary(residuals_fit)
#abs_residuals = abs(residuals(result))
abs_residuals = residuals(result)
residuals_fit=lm(abs_residuals^2~result$fitted)
summary(residuals_fit)
residuals_fit=lm(abs_residuals^2~result$fitted)
summary(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result$residual)
acf(result$residual)
acf(result.weighted$residual)
plot(r,result.weighted$fitted)
abs_residuals = abs(residuals(result))
#abs_residuals = residuals(result)
residuals_fit=lm(abs_residuals^2~result$fitted)
summary(residuals_fit)
# weighted least squares
# s(i)^2 = g0 + g1 y_hat(i) + zeta(i), zeta(i) is the error
wts=1/abs(fitted(residuals_fit))
result.weighted=lm(HP~HOME+LOT, data=hpdata,weights=wts)
acf(result.weighted$residual)
anova(result.weighted)
summary(residuals_fit)
summary(result.weighted)
anova(result.weighted)
summary(result.weighted)
pwd
pwd()
# Regression for Time Series Data
emp_data <- read.table("EmployeeData.txt", header=TRUE)
plot.ts(emp_data)
N=nrow(emp_data)
t=1:N
# fit a multiple regression model
ols.fit <- lm(metal~vendor,data=emp_data)
summary(ols.fit)
plot(t,ols.fit$residual)
acf(ols.fit$residual)
install.packages("lmtest")	#download required packages for Durbin-Watson test
library(lmtest)
dwtest(ols.fit)		#Durbin-Watson test for autocorrelation in residuals
phi.hat=lm(ols.fit$residual[2:N]~0+ols.fit$residual[1:N-1])$coeff	#calculte phi fot the Cochrane Method
y.trans=emp_data$metal[2:N]-phi.hat*emp_data$metal[1:N-1]		#Transform y and x according to the Cochrane Method
x.trans=emp_data$vendor[2:N]-phi.hat*emp_data$vendor[1:N-1]
coch.or=lm(y.trans~x.trans)		#Fit OLS regression with transformed data
summary(coch.or)
acf(coch.or$residual)
dwtest(coch.or)			#Durbin-Watson test for autocorrelation in residuals after the Cochrane Method
?coch
library("lmtest")
?coch
?coch.or
View(emp_data)
View(emp_data)
