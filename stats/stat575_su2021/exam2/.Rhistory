b <- boot(samp, stat, B)
ci <- boot.ci(b,conf=1-alpha,type="perc")$percent
for (x in xs)
{
if (x >= ci[4] && x <= ci[5])
{
covers <- covers + 1
}
}
}
covers / M
}
covers.proportion <- function(true.value, samp, stat, B, M, alpha=0.05)
{
covers.count <- 0
for (i in 1:M)
{
b <- boot(samp, stat, B)
ci <- boot.ci(b,conf=1-alpha,type="perc")$percent
for (x in xs)
{
if (x >= ci[4] && x <= ci[5])
{
covers.count <- covers.count + 1
}
}
}
covers.count / M
}
covers.proportion <- function(true.value, samp, stat, B, M, alpha=0.05)
{
covers.count <- 0
for (i in 1:M)
{
b <- boot(samp, stat, B)
ci <- boot.ci(b,conf=1-alpha,type="perc")$percent
for (x in xs)
{
if (x >= ci[4] && x <= ci[5])
{
covers.count <- covers.count + 1
}
}
}
covers.count / M
}
covers.proportion(q.true,x,q.stat(.9),1000,200)
covers.proportion <- function(true.value, samp, stat, B, M, alpha=0.05)
{
covers.count <- 0
for (i in 1:M)
{
b <- boot(samp, stat, B)
ci <- boot.ci(b,conf=1-alpha,type="perc")$percent
for (x in samp)
{
if (x >= ci[4] && x <= ci[5])
{
covers.count <- covers.count + 1
}
}
}
covers.count / M
}
covers.proportion(q.true,x,q.stat(.9),1000,200)
ci.covers.proportion <- function(true.value, samp, stat, B, M, alpha=0.05)
{
covers.count <- 0
for (i in 1:M)
{
b <- boot(samp, stat, B)
ci <- boot.ci(b,conf=1-alpha,type="perc")$percent
if (true.value >= ci[4] && true.value <= ci[5])
{
covers.count <- covers.count + 1
}
}
covers.count / M
}
ci.covers.proportion(true.value,x,B,M)
ci.covers.proportion(true.value,x,B,1000)
ci.covers.proportion(true.value,x,q.stat(.9),B,1000)
ci.covers.proportion(q.true,x,q.stat(.9),B,1000)
?boot
?boot.ci
library(boot)
?boot.ci
x <- rexp(100000)
q.est <- quantile(samp,.9)
q.est <- quantile(x,.9)
q.est
qexp(.9)
density(x,bw=bw.bcv(x),n=1,from=q.est,to=q.est)
plot(density(x,bw=bw.bcv(x),n=1,from=q.est,to=q.est))
density(x,bw=bw.bcv(x),from=q.est,to=q.est)
density(x,bw=bw.bcv(x),from=q.est,to=q.est+1)
density(x,bw=bw.bcv(x),from=q.est,to=q.est)
density(x,bw=bw.bcv(x),from=q.est,to=q.est)
x
x <- rexp(100)
density(x,bw=bw.bcv(x),from=q.est,to=q.est)
plot(density(x,bw=bw.bcv(x),from=q.est,to=q.est))
plot(density(x,bw=bw.bcv(x),n=10000,from=q.est,to=q.est))
plot(density(x,bw=bw.bcv(x),n=10000,from=q.est,to=q.est))
q.est
q.est <- quantile(x)
q.est
q.est <- quantile(x,.9)
q.est
q.star
q.star <- qexp(.9)
q.star
x <- rexp(10000)
q.est <- quantile(x,.9)
q.est
density(x,bw=bw.bcv(x),n=10000,from=q.est,to=q.est)
plot(density(x,bw=bw.bcv(x),n=10000,from=q.est,to=q.est))
plot(density(x,bw=bw.bcv(x),n=10000,from=0,to=100))
plot(density(x,bw=bw.bcv(x),n=10000,from=0,to=10))
plot(density(x,bw=bw.bcv(x),n=10000,from=0,to=3))
plot(density(x,bw=bw.bcv(x),n=1,from=0,to=3))
plot(density(x,bw=bw.bcv(x),n=2,from=0,to=3))
plot(density(x,bw=bw.bcv(x),n=10,from=0,to=3))
plot(density(x,bw=bw.bcv(x),n=1,from=0,to=3))
density(x,bw=bw.bcv(x),n=1,from=0,to=3)
summary(density(x,bw=bw.bcv(x),n=1,from=0,to=3))
density(x,bw=bw.bcv(x),n=1,from=0,to=3)$y
density(x,bw=bw.bcv(x),n=1,from=0,to=10)$y
density(x,bw=bw.bcv(x),n=1,from=q.star,to=q.star)$y
density(x,bw=bw.bcv(x),n=1,from=q.est,to=q.est)$y
density(x,bw=bw.bcv(x),n=10,from=q.est,to=q.est)$y
density(x,bw=bw.bcv(x),n=1,from=q.est,to=q.est)$y
q.est
?quantile
q.ci.delta <- function(samp,p,alpha)
{
z <- qnorm(1-alpha/2)
q.est <- quantile(samp,p)
f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)$y
cat("f =", f, "\n")
se <- sqrt(p*(1-p)/(n*f^2))
list(estimate=q.est,p=p,alpha=alpha,ci=c(q.est-z*se,q.est+z*se))
}
q.ci.delta(x,.9,.05)
q.ci.delta <- function(samp,p,alpha)
{
z <- qnorm(1-alpha/2)
q.est <- quantile(samp,p)
f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)
se <- sqrt(p*(1-p)/(n*f^2))
list(estimate=q.est,p=p,alpha=alpha,ci=c(q.est-z*se,q.est+z*se))
}
samp <- rexp(n)
z <- qnorm(1-alpha/2)
q.est <- quantile(samp,p)
q.est
f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)
f
f$n
n <- 20
samp <- rexp(n)
q.est <- quantile(samp,p)
q.est
f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)
f
bw.nrd(samp)
bw.bcv(samp)
h <- bw.bcv(samp)
h
?bw.bcv
bw.ucv(samp)
bw.SJ(samp)
h <- bw.bcv(samp)
h <- bw.bcv(samp)
h
bw.bcv(samp)
f <- density(samp,bw="bcv",n=1,from=q.est,to=q.est)$y
f <- density(samp,bw="nrd",n=1,from=q.est,to=q.est)$y
########################
# simulate exp(1) data #
########################
q.star <- qexp(p) # true value
bs.coverage <- 0
delta.coverage <- 0
bs.ci.avg <- 0
delta.ci.avg <- 0
for (i in 1:M)
{
samp <- rexp(n)
#b <- q.ci.bs(samp,p,alpha,B)
#bs.ci.avg <- bs.ci.avg + (b$ci[2] - b$ci[1])
#if (q.star >= b$ci[1] && q.star <= b$ci[2])
#{
#  bs.coverage <- bs.coverage + 1
#}
delta <- q.ci.delta(samp,p,alpha)
delta.ci.avg <- delta.ci.avg + (delta$ci[2] - delta$ci[1])
if (q.star >= delta$ci[1] && q.star <= delta$ci[2])
{
delta.coverage <- delta.coverage + 1
}
}
# ?
M <- 1000
# sample size
n <- 100
# CI alpha level
alpha <- 0.05
for (i in 1:M)
{
samp <- rexp(n)
#b <- q.ci.bs(samp,p,alpha,B)
#bs.ci.avg <- bs.ci.avg + (b$ci[2] - b$ci[1])
#if (q.star >= b$ci[1] && q.star <= b$ci[2])
#{
#  bs.coverage <- bs.coverage + 1
#}
delta <- q.ci.delta(samp,p,alpha)
delta.ci.avg <- delta.ci.avg + (delta$ci[2] - delta$ci[1])
if (q.star >= delta$ci[1] && q.star <= delta$ci[2])
{
delta.coverage <- delta.coverage + 1
}
}
z <- qnorm(1-alpha/2)
q.est <- quantile(samp,p)
f <- density(samp,bw="nrd",n=1,from=q.est,to=q.est)$y
f
#f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)
se <- sqrt(p*(1-p)/(n*f^2))
se
list(estimate=q.est,p=p,alpha=alpha,ci=c(q.est-z*se,q.est+z*se))
?density
q.ci.delta <- function(samp,p,alpha)
{
z <- qnorm(1-alpha/2)
q.est <- quantile(samp,p)
f <- density(samp,bw="SJ",n=1,from=q.est,to=q.est)$y
#f <- density(samp,bw=bw.bcv(samp),n=1,from=q.est,to=q.est)
se <- sqrt(p*(1-p)/(n*f^2))
list(estimate=q.est,p=p,alpha=alpha,ci=c(q.est-z*se,q.est+z*se))
}
?bw
??bw
qunif(.5)
qunif(.1)
?qchisq
?rchisq
?warnings
warnings()
library(boot)
?boot.ci
x <- read.table("coal.txt",header=T)
N <- length(x)
t <- function(theta) { sum(x[1:theta]) }
rlambda1 <- function(n,theta) { rgamma(n,t(theta)+1,theta+1) }
rlambda2 <- function(n,theta) { rgamma(n,t(N)-t(theta)+1,N-theta+1) }
t
t(3)
x
head(x)
x <- read.table("coal.txt",header=T)[,2]
x
N <- length(x)
N
read.table("coal.txt",header=T)
x <- read.table("coal.txt",header=T)[,2]
N <- length(x)
t <- function(theta) { sum(x[1:theta]) }
t(1)
t(2)
head(x)
t(3)
rlambda1(1,3)
rlambda1(1,3)
rlambda1(100,3)
rlambda2 <- function(n,theta) { rgamma(n,t(N)-t(theta)+1,N-theta+1) }
rlambda2(100,3)
t(N)
sum(x)
ptheta <- function(theta)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
}
ptheta(1)
ptheta <- function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
}
ptheta(1)
ptheta(1,2,3)
sum(ptheta(1:N,2,3))
sum(ptheta(1:(N-1),2,3))
for (i in 1:N) { s <- s + ptheta(i,2,3) }
s <- 0
for (i in 1:N) { s <- s + ptheta(i,2,3) }
s
for (i in 1:N) { s <- s + ptheta(i,2,3) }
s <- 0
for (i in 1:N) { s <- s + ptheta(i,3,2) }
s
ptheta <- function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta-1)*exp(theta*(lambda2-lambda1))
}
s <- 0
for (i in 1:N) { s <- s + ptheta(i,3,2) }
s
ptheta <- function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
}
cdf <- cumsum(ptheta(1:N,lambda1,lambda2))
cdf <- table/table[N]
cdf <- cumsum(ptheta(1:N,lambda1,lambda2))
cdf <- cumsum(ptheta(1:N,3,2))
ptheta <- Vectorize(function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
},"theta")
cdf <- cumsum(ptheta(1:N,3,2))
cdf
cdf/cdf[111]
tail(cdf)
cdf[111]
x
ptheta(1:N)
ptheta(1:N,3,2)
sum(ptheta(1:N,3,2))
Z <- sum(ptheta(1:N,3,2))
cumsum(ptheta(1:N,3,2))
?cumsum
cumsum(1:3)
ptheta <- Vectorize(function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
},"theta")
sum(ptheta(1:N,3,2))
p.theta <- function(theta,lambda1,lambda2)
{
Z <- sum(k.theta(1:N,lambda1,lambda2))
k.theta(theta,lambda1,lambda2)/Z
}
p.theta(1,3,2)
k.theta <- Vectorize(function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
},"theta")
p.theta(1,3,2)
p.theta(2,3,2)
sum(p.theta(1:N,3,2)
)
p.theta(1:N,3,2))
p.theta(1:N,3,2)
sum(p.theta(1:N,3,2))
cumsum(p.theta(1:N,3,2))
options(digits=22)
cumsum(p.theta(1:N,3,2))
1:N
x[N]
x
x[N-1]
r.theta = function(n,lambda1,lambda2)
{
sample(x = 1:N, n, replace = T, prob = p.theta(1:N,lambda1,lambda2))
}
r.theta(10,3,2)
r.theta(10,3,2)
r.theta(10,3,2)
rlambda.prior <- function(n) { rgamma(shape=3,rate=1) }
rlambda.prior(3)
rlambda.prior <- function(n) { rgamma(n,shape=3,rate=1) }
rlambda.prior(3)
rtheta.prior(3)
rtheta.prior <- function(n) { sample(1:N,n,replace=T) }
rtheta.prior(3)
rtheta.prior(30)
thetas <- matrix(nrow=nn,ncol=3)
thetas <- matrix(nrow=10,ncol=3)
thetas[1,] <- c(rtheta.prior(),rlambda.prior(),rlambda.prior())
rlambda.prior <- function() { rgamma(1,shape=3,rate=1) }
rtheta.prior <- function() { sample(1:N,1,replace=T) }
thetas[1,] <- c(rtheta.prior(),rlambda.prior(),rlambda.prior())
thetas
thetas
thetas[1,] <- c(rtheta.prior(),rlambda.prior(),rlambda.prior())
thetas[1,]
gibbs <- function(n,x,burn=1000)
{
rlambda.prior <- function() { rgamma(1,shape=3,rate=1) }
rtheta.prior <- function() { sample(1:N,1,replace=T) }
nn <- n+burn
thetas <- matrix(nrow=nn,ncol=3)
thetas[1,] <- c(rtheta.prior(),rlambda.prior(),rlambda.prior())
for (i in 1:(nn-1))
{
theta.new <- rtheta(1,thetas[i,2],thetas[i,3])
lambda1.new <- rlambda1(1,theta.new)
lambda2.new <- rlambda2(1,theta.new)
thetas[i+1,] <- c(theta.new,lambda1.new,lambda2.new)
}
thetas <- thetas[(burn+1):nn,]
theta.est <- mean(thetas[,1])
lambda1.est <- mean(thetas[,2])
lambda2.est <- mean(thetas[,3])
list(theta.dist=thetas,theta.est=theta.est,lambda1.est=lambda1.est,lambda2.est=lambda2.est)
}
gibbs <- function(n,burn=1000)
{
rlambda.prior <- function() { rgamma(1,shape=3,rate=1) }
rtheta.prior <- function() { sample(1:N,1,replace=T) }
nn <- n+burn
thetas <- matrix(nrow=nn,ncol=3)
thetas[1,] <- c(rtheta.prior(),rlambda.prior(),rlambda.prior())
for (i in 1:(nn-1))
{
theta.new <- rtheta(1,thetas[i,2],thetas[i,3])
lambda1.new <- rlambda1(1,theta.new)
lambda2.new <- rlambda2(1,theta.new)
thetas[i+1,] <- c(theta.new,lambda1.new,lambda2.new)
}
thetas <- thetas[(burn+1):nn,]
theta.est <- mean(thetas[,1])
lambda1.est <- mean(thetas[,2])
lambda2.est <- mean(thetas[,3])
list(theta.dist=thetas,theta.est=theta.est,lambda1.est=lambda1.est,lambda2.est=lambda2.est)
}
gibbs(10,0)
rtheta = function(n,lambda1,lambda2)
{
sample(x=1:N, n, replace=T, prob=p.theta(1:N,lambda1,lambda2))
}
gibbs(10,0)
gibbs(1000,0)
gibbs(1000,0)
gibbs(1000,0)
gibbs(10000,1000)
x <- read.table("coal.txt",header=T)[,2]
N <- length(x)
N
t <- function(theta) { sum(x[1:theta]) }
rlambda1 <- function(n,theta) { rgamma(n,t(theta)+1,theta+1) }
rlambda2 <- function(n,theta) { rgamma(n,t(N)-t(theta)+1,N-theta+1) }
ktheta <- Vectorize(function(theta,lambda1,lambda2)
{
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
},"theta")
ptheta <- function(theta,lambda1,lambda2)
{
Z <- sum(ktheta(1:(N-1),lambda1,lambda2))
ktheta(theta,lambda1,lambda2)/Z
}
rtheta = function(n,lambda1,lambda2)
{
sample(x=1:(N-1),n,replace=T,prob=ptheta(1:(N-1),lambda1,lambda2))
}
rlambda1.prior <- function() { rgamma(1,shape=3,rate=1) }
rlambda2.prior <- function() { rgamma(1,shape=3,rate=1) }
rtheta.prior <- function() { sample(1:(N-1),1,replace=T) }
plot(x=1:112,y=ptheta(1:112,3,2))
plot(x=1:112,y=ptheta(1:112,1,1))
plot(x=1:112,y=ptheta(1:112,2,2))
plot(x=1:112,y=ptheta(1:112,1,2))
plot(x=1:112,y=ptheta(1:112,1,20))
plot(x=1:112,y=ptheta(1:112,1,3))
plot(x=1:112,y=ptheta(1:111,1,3))
plot(x=1:111,y=ptheta(1:111,1,3))
sum(ptheta(1:111,1,3))
sum(ptheta(1:112,1,3))
ptheta <- function(theta,lambda1,lambda2)
{
if (theta < 1 || theta >= N) { return(0) }
Z <- sum(ktheta(1:(N-1),lambda1,lambda2))
ktheta(theta,lambda1,lambda2)/Z
}
rtheta = function(n,lambda1,lambda2)
{
sample(x=1:(N-1),n,replace=T,prob=ptheta(1:(N-1),lambda1,lambda2))
}
rlambda1.prior <- function() { rgamma(1,shape=3,rate=1) }
rlambda2.prior <- function() { rgamma(1,shape=3,rate=1) }
rtheta.prior <- function() { sample(1:(N-1),1,replace=T) }
sum(ptheta(1:112,1,3))
ktheta <- Vectorize(function(theta,lambda1,lambda2)
{
if (theta < 1 || theta >= N) { return(0) }
(lambda1/lambda2)^t(theta)*exp(theta*(lambda2-lambda1))
},"theta")
ptheta <- function(theta,lambda1,lambda2)
{
Z <- sum(ktheta(1:(N-1),lambda1,lambda2))
ktheta(theta,lambda1,lambda2)/Z
}
rtheta = function(n,lambda1,lambda2)
{
sample(x=1:(N-1),n,replace=T,prob=ptheta(1:(N-1),lambda1,lambda2))
}
sum(ptheta(1:112,1,3))
sum(ptheta(1:112,1,3))
plot(x=1:112,y=ptheta(1:111,1,3))
plot(x=1:112,y=ptheta(1:112,1,3))
plot(x=1:112,y=ptheta(1:112,1.5,3))
plot(x=1:112,y=ptheta(1:112,2,3))
plot(x=1:112,y=ptheta(1:112,2,1.5))
plot(x=1:112,y=ptheta(1:112,3,.92))
thetas=rtheta(10000,,3,.92)
thetas=rtheta(10000,3,.92)
hist(thetas)
thetas=rtheta(100000,3,.92)
thetas=rtheta(100000,3,.92)
hist(thetas,freq=F)
plot(x=35:47,y=ptheta(35:47,3,.92))
